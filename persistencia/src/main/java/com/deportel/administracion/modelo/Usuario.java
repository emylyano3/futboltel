package com.deportel.administracion.modelo;

// Generated 05/04/2012 23:09:35 by Hibernate Tools 3.4.0.CR1

import static javax.persistence.GenerationType.IDENTITY;

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.Table;

import com.deportel.common.utils.Encoder;

/**
 * Usuario generated by hbm2java
 */
@Entity
@Table(name = "usuario", catalog = "administracion")
public class Usuario implements java.io.Serializable
{
	private static final long	serialVersionUID	= 1L;

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "c_id", unique = true, nullable = false)
	private Integer				CId;

	@Column(name = "d_alias", nullable = false, length = 50, unique=true)
	private String				DAlias;

	@Column(name = "d_nombre", length = 50)
	private String				DNombre;

	@Column(name = "d_apellido", length = 50)
	private String				DApellido;

	@Column(name = "d_email", nullable = false, length = 120)
	private String				DEmail;

	@Column(name = "d_password", nullable = false, length = 30)
	private String				DPassword;

	@Column(name = "m_estado", length = 1)
	private String				MEstado;

	@ManyToMany
	@JoinTable(
			name = "perfil_usuario",
			joinColumns = { @JoinColumn(name = "usuario_c_id") },
			inverseJoinColumns = { @JoinColumn(name = "perfil_c_id")}
	)
	private Set<Perfil>			perfiles = new HashSet<Perfil>(0);

	public Usuario()
	{
	}

	public Usuario(String DAlias, String DPassword)
	{
		this.DAlias = DAlias;
		this.DPassword = DPassword;
	}

	public Usuario(String DAlias, String DNombre, String DApellido, String DPassword, String MEstado)
	{
		this.DAlias = DAlias;
		this.DNombre = DNombre;
		this.DApellido = DApellido;
		this.DPassword = DPassword;
		this.MEstado = MEstado;
	}

	public Integer getCId ()
	{
		return this.CId;
	}

	public void setCId (Integer CId)
	{
		this.CId = CId;
	}

	public String getDAlias ()
	{
		return Encoder.decode(this.DAlias);
	}

	public void setDAlias (String alias)
	{
		this.DAlias = Encoder.encode(alias);
	}

	public String getDNombre ()
	{
		return Encoder.decode(this.DNombre);
	}

	public void setDNombre (String nombre)
	{
		this.DNombre = Encoder.encode(nombre);
	}

	public String getDApellido ()
	{
		return Encoder.decode(this.DApellido);
	}

	public void setDApellido (String apellido)
	{
		this.DApellido = Encoder.encode(apellido);
	}

	/**
	 * @return the dEmail
	 */
	public String getDEmail ()
	{
		return Encoder.decode(this.DEmail);
	}

	/**
	 * @param dEmail the dEmail to set
	 */
	public void setDEmail (String email)
	{
		this.DEmail = Encoder.encode(email);
	}

	public String getDPassword ()
	{
		return Encoder.decode(this.DPassword);
	}

	public void setDPassword (String password)
	{
		this.DPassword = Encoder.encode(password);
	}

	public String getMEstado ()
	{
		return this.MEstado;
	}

	public void setMEstado (String MEstado)
	{
		this.MEstado = MEstado;
	}

	public Set<Perfil> getPerfiles ()
	{
		return this.perfiles;
	}

	public void setPerfiles (Set<Perfil> perfiles)
	{
		this.perfiles = perfiles;
	}

	/**
	 * Validate the user's credentials
	 * 
	 * @param "alias"
	 * @param "password"
	 * @return true si la pass ingresada coincide con la pass almacenada del
	 *         usuario
	 * @author Emy
	 * @since 01/02/2011
	 */
	public boolean validateCredentials(String alias, String password)
	{
		if (this.DAlias.equalsIgnoreCase(Encoder.encode(alias)))
		{
			if (Encoder.decode(this.DPassword).compareTo(password) == 0)
			{
				return true;
			}
			return false;
		}
		return false;
	}

	@Override
	public String toString()
	{
		StringBuilder st = new StringBuilder();
		st.append("\n")
		.append("Nombre: ").append(this.DNombre).append("\n")
		.append("Apellido: ").append(this.DApellido).append("\n")
		.append("Email: ").append(this.DEmail).append("\n");
		return st.toString();
	}

	public static final String	FIELD_NAME		= "DNombre";
	public static final String	FIELD_ALIAS		= "DAlias";
	public static final String	FIELD_PASSWORD	= "DPassword";
	public static final String	FIELD_STATE		= "MEstado";
}
