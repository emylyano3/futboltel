package com.deportel.componentes.modelo;

// Generated 15/09/2011 22:54:04 by Hibernate Tools 3.3.0.GA

import static javax.persistence.GenerationType.IDENTITY;

import java.util.HashSet;
import java.util.Iterator;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import com.deportel.common.Constants;

/**
 * Componente generated by hbm2java
 */
@Entity
@Table(name = "componente", catalog = "componentes")
public class Componente/* extends FutboltelEntity */implements java.io.Serializable, Cloneable
{
	private static final long	serialVersionUID	= 1291747715574692321L;

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "c_id", unique = true, nullable = false)
	private Integer				CId;

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "padre_c_id")
	private Componente			padre;

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "tema_c_id", nullable = false)
	private Tema				tema;

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "tipo_componente_c_id", nullable = false)
	private TipoComponente		tipoComponente;

	@Column(name = "m_contenido", length = 1)
	private String				MContenido;

	@Column(name = "m_estado", length = 1)
	private String				MEstado;

	@Column(name = "c_componente")
	private String				CComponente;

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "componente")
	private Set<Propiedad>		propiedades			= new HashSet<Propiedad>(0);

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "padre")
	private Set<Componente>		hijos				= new HashSet<Componente>(0);

	public Componente()
	{
	}

	public Componente(Tema tema, TipoComponente tipoComponente)
	{
		this.tema = tema;
		this.tipoComponente = tipoComponente;
	}

	public Componente(Componente padre, Tema tema, TipoComponente tipoComponente, String MContenido, String MEstado, Set<Propiedad> propiedades, Set<Componente> hijos)
	{
		this.padre = padre;
		this.tema = tema;
		this.tipoComponente = tipoComponente;
		this.MContenido = MContenido;
		this.MEstado = MEstado;
		this.propiedades = propiedades;
		this.hijos = hijos;
	}

	public Integer getCId ()
	{
		return this.CId;
	}

	public void setCId (Integer CId)
	{
		this.CId = CId;
	}

	public Componente getPadre ()
	{
		return this.padre;
	}

	public void setPadre (Componente padre)
	{
		this.padre = padre;
	}

	public Tema getTema ()
	{
		return this.tema;
	}

	public void setTema (Tema tema)
	{
		this.tema = tema;
	}

	public TipoComponente getTipoComponente ()
	{
		return this.tipoComponente;
	}

	public void setTipoComponente (TipoComponente tipoComponente)
	{
		this.tipoComponente = tipoComponente;
	}

	public String getMContenido ()
	{
		return this.MContenido;
	}

	public void setMContenido (String MContenido)
	{
		this.MContenido = MContenido;
	}

	public String getMEstado ()
	{
		return this.MEstado;
	}

	public void setMEstado (String MEstado)
	{
		this.MEstado = MEstado;
	}

	public void setCComponente (String cComponente)
	{
		this.CComponente = cComponente;
	}

	public String getCComponente ()
	{
		return this.CComponente;
	}

	public Set<Propiedad> getPropiedades ()
	{
		return this.propiedades;
	}

	public void setPropiedades (Set<Propiedad> propiedades)
	{
		this.propiedades = propiedades;
	}

	public Set<Componente> getHijos ()
	{
		return this.hijos;
	}

	public void setHijos (Set<Componente> hijos)
	{
		this.hijos = hijos;
	}

	/**
	 * Busca en las propiedades del componente, aquella que sea del
	 * tipo de propiedad cuyo tag xml coincida con el nombre enviado.<br/>
	 * <b>Ejemplo:</b> Deseo obtener la {@link Propiedad} cuyo tag es name
	 * del componente un componente detemrinado.
	 * 
	 * @param tagXml
	 *            El nombre del tipo de propiedad que se quiere del
	 *            componente.
	 * @return La propiedad del componente que es del tipo que se
	 *         solicita.
	 * @see TipoPropiedad
	 */
	public Propiedad getPropiedadByTagXml (String tagXml)
	{
		Propiedad propiedad;
		for (Iterator<Propiedad> it = this.propiedades.iterator(); it.hasNext();)
		{
			propiedad = it.next();
			if (propiedad.getTipoPropiedad().getDTagXml().equals(tagXml))
			{
				return propiedad;
			}
		}
		return null;
	}

	/* (non-Javadoc)
	 * @see java.lang.Object#clone()
	 */
	@Override
	public Componente clone () throws CloneNotSupportedException
	{
		Componente clon = new Componente();
		clon.setCComponente(this.CComponente);
		clon.setMContenido(Constants.HABILITADO);
		clon.setMEstado(this.MEstado);
		clon.setTema(this.tema);
		clon.setTipoComponente(this.tipoComponente);
		clon.setPropiedades(clonarPropiedades(clon));
		//TODO Verificar si es correcto setear al clonado el mismo padre que el componente origen
		clon.setPadre(this.padre);
		return clon;
	}

	/**
	 * Clona las propiedades del componente.
	 * 
	 * @return {@link Set} con las propiedades del componentes
	 *         clonadas.
	 */
	private Set<Propiedad> clonarPropiedades (Componente componente) throws CloneNotSupportedException
	{
		Set<Propiedad> clonedProperties = new HashSet<Propiedad>();
		Propiedad clonedProperty;
		for (Propiedad propiedad : this.propiedades)
		{
			clonedProperty = propiedad.clone();
			clonedProperty.setComponente(componente);
			clonedProperties.add(clonedProperty);
		}
		return clonedProperties;
	}
}
