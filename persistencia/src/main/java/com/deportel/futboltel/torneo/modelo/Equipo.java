package com.deportel.futboltel.torneo.modelo;

// Generated 30/01/2011 15:37:39 by Hibernate Tools 3.3.0.GA

import static javax.persistence.GenerationType.IDENTITY;

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Equipo generated by hbm2java
 */
@Entity
@Table(name = "equipo", catalog = "torneo")
public class Equipo implements java.io.Serializable
{
	private static final long	serialVersionUID		= 1L;

	private Integer				CId;
	private Categoria			categoria;
	private String				DNombre;
	private String				DDescripcion;
	private String				MEstado;
	private Set<Jugador>		jugadors				= new HashSet<Jugador>(0);

	public Equipo()
	{
	}

	@Override
	public int hashCode ()
	{
		final int prime = 31;
		int result = 1;
		result = prime * result + ((this.CId == null) ? 0 : this.CId.hashCode());
		return result;
	}

	@Override
	public boolean equals (Object obj)
	{
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Equipo other = (Equipo) obj;
		if (this.CId == null)
		{
			if (other.CId != null)
				return false;
		}
		else if (!this.CId.equals(other.CId))
			return false;
		return true;
	}

	public Equipo(Categoria categoria)
	{
		this.categoria = categoria;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "categoria_c_id", nullable = false)
	public Categoria getCategoria ()
	{
		return this.categoria;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "c_id", unique = true, nullable = false)
	public Integer getCId ()
	{
		return this.CId;
	}

	@Column(name = "d_descripcion", length = 200)
	public String getDDescripcion ()
	{
		return this.DDescripcion;
	}

	@Column(name = "d_nombre", length = 45)
	public String getDNombre ()
	{
		return this.DNombre;
	}

	//	@OneToMany(fetch = FetchType.LAZY, mappedBy = "equipo")
	//	public Set<Evento> getEventos ()
	//	{
	//		return this.eventos;
	//	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "equipo")
	public Set<Jugador> getJugadors ()
	{
		return this.jugadors;
	}

	@Column(name = "m_estado", length = 1)
	public String getMEstado ()
	{
		return this.MEstado;
	}

	//	@OneToMany(fetch = FetchType.LAZY, mappedBy = "equipoByLocalCId")
	//	public Set<Partido> getPartidosForLocalCId ()
	//	{
	//		return this.partidosForLocalCId;
	//	}
	//
	//	@OneToMany(fetch = FetchType.LAZY, mappedBy = "equipoByVisitanteCId")
	//	public Set<Partido> getPartidosForVisitanteCId ()
	//	{
	//		return this.partidosForVisitanteCId;
	//	}
	//
	//	@OneToMany(fetch = FetchType.LAZY, mappedBy = "equipo")
	//	public Set<Sancion> getSancions ()
	//	{
	//		return this.sancions;
	//	}
	//
	//	@OneToMany(fetch = FetchType.LAZY, mappedBy = "equipo")
	//	public Set<TorneoEquipo> getTorneoEquipos ()
	//	{
	//		return this.torneoEquipos;
	//	}

	public void setCategoria (Categoria categoria)
	{
		this.categoria = categoria;
	}

	public void setCId (Integer CId)
	{
		this.CId = CId;
	}

	public void setDDescripcion (String DDescripcion)
	{
		this.DDescripcion = DDescripcion;
	}

	public void setDNombre (String DNombre)
	{
		this.DNombre = DNombre;
	}

	//	public void setEventos (Set<Evento> eventos)
	//	{
	//		this.eventos = eventos;
	//	}

	public void setJugadors (Set<Jugador> jugadors)
	{
		this.jugadors = jugadors;
	}

	public void setMEstado (String MEstado)
	{
		this.MEstado = MEstado;
	}

	public static final String	FIELD_STATE	= "MEstado";
}
