package com.deportel.futboltel.torneo.modelo;

// Generated 30/01/2011 15:37:39 by Hibernate Tools 3.3.0.GA

import static javax.persistence.GenerationType.IDENTITY;

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.Table;

/**
 * Partido generated by hbm2java
 */
@Entity
@Table(name = "partido", catalog = "torneo")
public class Partido implements java.io.Serializable
{
	private static final long	serialVersionUID	= 1L;

	private Integer				CId;
	private Cancha				cancha;
	private Horario				horario;
	private Fecha				fecha;
	private Equipo				equipoByVisitanteCId;
	private Equipo				equipoByLocalCId;
	private Arbitro				arbitro;
	private Torneo				torneo;
	private String				MEstado;
	private Set<Evento>			eventos				= new HashSet<Evento>(0);

	public Partido()
	{
	}

	public Partido(Cancha cancha, Horario horario, Fecha fecha, Equipo equipoByVisitanteCId, Equipo equipoByLocalCId, Torneo torneo, Arbitro arbitro, String MEstado, Set<Evento> eventos)
	{
		this.cancha = cancha;
		this.horario = horario;
		this.fecha = fecha;
		this.equipoByVisitanteCId = equipoByVisitanteCId;
		this.equipoByLocalCId = equipoByLocalCId;
		this.torneo = torneo;
		this.arbitro = arbitro;
		this.MEstado = MEstado;
		this.eventos = eventos;
	}

	public Partido(Equipo equipoByVisitanteCId, Equipo equipoByLocalCId, Torneo torneo, Arbitro arbitro)
	{
		this.equipoByVisitanteCId = equipoByVisitanteCId;
		this.equipoByLocalCId = equipoByLocalCId;
		this.torneo = torneo;
		this.arbitro = arbitro;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "cancha_c_id")
	public Cancha getCancha ()
	{
		return this.cancha;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "c_id", unique = true, nullable = false)
	public Integer getCId ()
	{
		return this.CId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "local_c_id", nullable = false)
	public Equipo getEquipoByLocalCId ()
	{
		return this.equipoByLocalCId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "visitante_c_id", nullable = false)
	public Equipo getEquipoByVisitanteCId ()
	{
		return this.equipoByVisitanteCId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "partido")
	public Set<Evento> getEventos ()
	{
		return this.eventos;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "fecha_c_id")
	public Fecha getFecha ()
	{
		return this.fecha;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "horario_c_id")
	public Horario getHorario ()
	{
		return this.horario;
	}

	@Column(name = "m_estado", length = 1)
	public String getMEstado ()
	{
		return this.MEstado;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "torneo_c_id", nullable = false)
	public Torneo getTorneo ()
	{
		return this.torneo;
	}
	
	@OneToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "arbitro_c_id", nullable = false)
	public Arbitro getArbitro ()
	{
		return this.arbitro;
	}

	public void setCancha (Cancha cancha)
	{
		this.cancha = cancha;
	}

	public void setCId (Integer CId)
	{
		this.CId = CId;
	}

	public void setEquipoByLocalCId (Equipo equipoByLocalCId)
	{
		this.equipoByLocalCId = equipoByLocalCId;
	}

	public void setEquipoByVisitanteCId (Equipo equipoByVisitanteCId)
	{
		this.equipoByVisitanteCId = equipoByVisitanteCId;
	}

	public void setEventos (Set<Evento> eventos)
	{
		this.eventos = eventos;
	}

	public void setFecha (Fecha fecha)
	{
		this.fecha = fecha;
	}

	public void setHorario (Horario horario)
	{
		this.horario = horario;
	}

	public void setMEstado (String MEstado)
	{
		this.MEstado = MEstado;
	}

	public void setTorneo (Torneo torneo)
	{
		this.torneo = torneo;
	}
	
	public void setArbitro (Arbitro arbitro)
	{
		this.arbitro = arbitro;
	}

}
